@font-face {
    font-family: 'San Francisco';
    src: url('./assets/SF-Pro-Display-Regular.otf');
}
@font-face {
    font-family: 'San Francisco Mono';
    src: url('./assets/SF-Mono-Regular.otf');
}

@keyframes dock {
    0%{border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        width: 50%;
        height: 8px;
        background-color: #ffffff88;
        position: absolute;
        bottom: 0;
        left: 25%;}
    100%{
        border-radius: 5px;
        
        width: 50%;
        height: 60px;
        background-color: #ffffff88;
        position: absolute;
        bottom: 0px;
        left: 25%;
    }
}

@keyframes embiggen {
    0%{transform: scale(1);}
    100%{
        transform: scale(1.1);
    }

}

*{
    box-sizing: border-box;
}



html {
    background-image: url('./assets/bg.jpg');
    width: 100vw;
    margin: 0;
    padding: 0;
}

body {
    overflow: hidden;
    width: 100vw;
    height: 100vh;
    display: grid;
    margin: 0;
    padding: 0;
    color: black;
    font-family:  San Francisco, 'San Francisco', Helvetica, Arial, sans-serif;
    font-weight: 500;
    grid-template: minmax(20px, 2vh) 98vh / 100vw;
    grid-template-areas:
    "header"
    "content"
}

.clock {
    font-family: ui-monospace, 
    Menlo, Monaco, 
    "Cascadia Mono", "Segoe UI Mono", 
    "Roboto Mono", 
    "Oxygen Mono", 
    "Ubuntu Mono", 
    "Source Code Pro",
    "Fira Mono", 
    "Droid Sans Mono", 
    "Consolas", "Courier New", monospace;
    font-size: small;
    font-weight: 400;
}



header {
    display: grid;
    padding-left: 3px;
    align-items: center;
    grid-template: minmax(20px, 2vh) / minmax(20px, 2vw) minmax(75px, 1.5fr) 100px 100px 100px 10fr 200px;
    column-gap: 5px;
    grid-area: header;
    background-color: #ffffff88;
    background-repeat: no-repeat;
    background-size: cover;
    background-attachment: fixed;
    box-shadow: 3px 0px 10px black;
    justify-items: start;
}

.windowPane{
    display: grid;
    
    grid-template-rows: minmax(20px, 2vh) 1fr;
    background-color: #ffffff99;
    border-radius: 4px;
    box-shadow: 1px 1px 10px black;
    height: 50%;
    width: 50%;
    min-width: 450px;
    position: absolute;
    z-index: 9999;
    left: 25%;
    top: 25%;
    /* transform: translate(-50%, -50%); */
}

.windowPaneMaximized{
    height: 100%;
    width: 100%;
    left: 0px;
    top: 0px;
}

.windowTop{
    display: grid;
    grid-template-columns: 15px 15px 15px 1fr;
    column-gap: 2px;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    background-color: #eeeeeebb;
    justify-items: center;
    align-items: center;
}

.buttonYellow{
    border-radius: 100%;
    box-shadow: inset 0 0 2px white;
    width: 12px;
    height: 12px;
    background-color: yellow;
    cursor: pointer;
}

.buttonRed{
    border-radius: 100%;
    box-shadow: inset 0 0 2px white;
    width: 12px;
    height: 12px;
    background-color: Red;
    cursor: pointer;}

.buttonGreen{
    border-radius: 100%;
    box-shadow: inset 0 0 2px white;
    width: 12px;
    height: 12px;
    background-color: Green;
    cursor: pointer;}

.windowBottom{
    display: grid;
}


.headerbar{
    width: 100%;
}

.headerbar:hover{
    background-color: #ffffff99;
}

.headericon {
    height: 80%;
}


content{
    grid-area: content;
    user-select: none;
    display: grid;
    position: relative;
    grid-template: 1fr 1fr 1fr / 1fr 1fr 1fr 1fr 1fr 1fr 6fr;
    gap: 10px;
    grid-auto-rows: max-content;
}

.draggable {
    -webkit-tap-highlight-color: transparent;
    user-select: none; 
    -webkit-user-select: none; /* Safari */ 
    -moz-user-select: none; /* Firefox */ 
    -ms-user-select: none; /* Internet Explorer/Edge */
    display: grid;
    justify-items: center;
    grid-template-rows: 50px 10px;
    width: 70px;
    height: 70px;
    /* position: absolute; */
    cursor: grab;
    user-select: text;
}

.draggable:active{
    outline: 1px solid #ffffff11;
    border-radius: 4px;
}

.icon {
    z-index: -1;
    width: 50px;
    height: 50px;
}

.iconText {
    display: grid;
    align-items: center;
    font-size: 15px;
    border-radius: 4px;
    z-index: -1;
    text-align: center;
    color: #c2bfbf;
    background-color: #00000060;
    height: 20px;
    min-width: 50px;
    margin-bottom: 2px;
}

.dock {
    padding-top: 5px;
    box-shadow: 3px 0px 10px black;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: baseline;
    justify-content: flex-start;
    gap: 20px;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    width: 50%;
    height: 8px;
    max-height: 8px;
    overflow: hidden;
    background-color: #ffffff88;
    position: absolute;
    bottom: 0;
    left: 25%;
}

.dockIcon {
    width: 50px;
    height: 50px;
    cursor: pointer;
}

.smallIcon {
    width: 25px;
    height: 25px;
}

img {
    -webkit-tap-highlight-color: transparent;
    user-select: none; 
    -webkit-user-select: none; /* Safari */ 
    -moz-user-select: none; /* Firefox */ 
    -ms-user-select: none; /* Internet Explorer/Edge */
}

.dock:hover {
    animation: dock 1s;
    animation-fill-mode: forwards;
    border-radius: 5px;
    width: 50%;
    height: 60px;
    background-color: #ffffff88;
    position: absolute;
    bottom: 20;
    left: 25%;
    max-height: 60px;
}

/* Maybe This content below should be put into a separate css file for the app specifically. */

.toDoContainer{
    width: 100%;
    height: 100%;
    grid-template: minmax(30px, 2%) 1fr / minmax(150px, 25%) 1fr;
    cursor: default;
    grid-template-areas:
    "toDoTop toDoTop"
    "toDoNav toDoContent";
    overflow-y: auto;
    
}

.toDoTop{
    background-color: #ffffff;
    z-index: 3;
    position: sticky;
    top: 0;
    box-shadow: 0px 1px 6px black;
    text-overflow: ellipsis;
    overflow: hidden; 
    grid-area: toDoTop;
    display: grid;
    align-items: center;
    justify-items: start;
    font-size: 90%;
    grid-template: 1fr / 10% minmax(70px, 15%) minmax(70px, 15%) minmax(100px, 30%) 30%;
    grid-template-areas:
    "todoimg todotitle . todourgent todototal"
}

.todonavicon {

    max-width: 50%;
    height: auto;
}

.todonavicon:hover {
    animation: embiggen 1s;
    animation-fill-mode: forwards;
    max-width: 50%;
    height: auto;
}

.navIconContainerToDo {
    display: grid;
    grid-template-rows: 4fr 1fr;
    align-items: center;
    justify-items: center;
}


.toDoTitle{
    grid-area: todotitle;
}
.urgentTaskTitle{
    grid-area: todourgent;
    justify-self: end;
}
.totalTaskTitle{
    grid-area: todototal;
    justify-self: center;
}
.toDoAppTitleImg{
    grid-area: todoimg;
}
.toDoNav{
    display: grid;
    background-color: #ffffffaa;
    border-right: 1px dashed #000000;
    grid-area: toDoNav;
    grid-template-rows: 1fr 1fr;
    align-items: center;
    justify-items: center;
    border-bottom-left-radius: 4px;
    }
.toDoContent{
    background-color: #ffffffaa;
    grid-area: toDoContent;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    border-bottom-right-radius: 4px;
    
}

.urgent{
    color: red;
    font-weight: bold;
}

.toDoProjectDiv {
    display: flex;
    flex-direction: column;
    width: 100px;
    justify-content: center;
    align-items: center;
    text-align: center;
}

.toDoIcon {
    z-index: 2;
    width: 50px;
    height: 50px;
}

.toDoIcon:hover {
    animation: embiggen 0.5s;
    animation-fill-mode: forwards;
}

.listTasks{
    display: grid;
    grid-template: 1fr 4fr / 1fr 1fr;
    grid-template-areas:
    "toDoProjectTitle toDoProjectTitle"
    "toDoProjectLeft toDoProjectRight";
    
    
}

.toDoProjectTitle {
    grid-area: toDoProjectTitle;
    justify-self: center;
}
.toDoLeftSide {
    grid-area: toDoProjectLeft;
}
.toDoRightSide{
    grid-area: toDoProjectRight
}

.singleTask{
    display: grid;
    grid-template: 1fr 1fr 1fr 1fr 1fr / 1fr 1fr;
    grid-template-areas:    "taskTitle taskTitle"
                            "taskDescription taskDescription"
                            "projectName projectPriority"
                            "taskTime taskComplete"
                            "taskDelete taskDelete"
}

#toDoTaskTitle{
    grid-area: taskTitle;
    background-image: linear-gradient(to right, rgba(175, 170, 170, .2), transparent);
    align-self: center;

}

#toDoTaskDesc{
    grid-area: taskDescription;
    border-bottom: 1px dashed black;
    overflow: hidden;
    margin-bottom: 5px;

}

#toDoTaskName{
    grid-area: projectName;

}

#toDoTaskPrior{
    grid-area: projectPriority;

}

#toDoTaskTime{
    grid-area: taskTime;

}
    
#toDoTaskComp{
    grid-area: taskComplete;

}

#toDoDelTask{
    grid-area: taskDelete;

}



/* projTitle.classList.add("toDoProjectTitle");
    taskList.classList.add("toDoLeftSide");
    infoBar.classList.add("toDoRightSide"); */